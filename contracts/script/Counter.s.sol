// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Script, console} from "forge-std/Script.sol";
import {IProtocol} from "../src/IProtocol.sol";

contract CounterScript is Script {
    // Counter public counter;

    function setUp() public {}

    function run() public {
        vm.startBroadcast();

        IProtocol protocol = IProtocol(address(0x4a46860E025D02f60Bff5f44afB25ed75298784C));

       bytes memory outPut = hex"240000000000000030333164656466302d633565322d343662612d616132342d396534373337663865363934070000000000000043617274657369020000000000000002000000000000000100000000000000420000000000000057686963682070726f746f636f6c206973206361727465736920706172746572696e67207769746820666f722074686973206578706572696d656e74207765656b3f0b00000000000000456967656e204c61796572000000000800000000000000457468657265756d0100000008000000000000004f7074696d69736d020000000600000000000000536f6c616e61030000000000000002000000000000002200000000000000576861747320746865206475726174696f6e206f66207468652070726f6772616d3f060000000000000031207965617200000000070000000000000032207765656b7301000000070000000000000036206d6f6e746802000000060000000000000031207765656b0300000003000000000000000000594000000000000049400100000000000000240000000000000030646331386430392d383132632d346661652d613561362d6436663334353665363363332a0000000000000030786633394664366535316161643838463646346365366142383832373237396366664662393232363600000000000000000200000000000000010000000000000000000000020000000000000003000000b462af67000000005761af670000000000000000000000000000000000000000";
       console.logBytes(outPut);

        bytes memory contract_output = protocol.checkQuizResponse(keccak256(outPut));
        console.logBytes(contract_output);

        vm.stopBroadcast();
    }
}
